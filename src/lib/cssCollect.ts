/* cssCollect.svelte generated by Svelte v3.52.0 */
import { create_ssr_component, validate_component } from "svelte/internal";
import {setContext} from 'svelte'
//import HeadStyle from './HeadStyle.svelte';
import {Pages} from './pagesServer';
import {cssContext} from './context';

const CssCollect = create_ssr_component(($$result :any, $$props:any, $$bindings:any, slots:any) => {
	let { props = {},page } = $$props;
    const hydratedStyles = new Set();
    setContext(cssContext,hydratedStyles);
    const Page = Pages[page];
    const before = new Set(Array.from($$result.css));
	const txt= `${validate_component(Page, "Page").$$render($$result,props? Object.assign(props):{}, {}, {})}`;
    const newClasses  = Array.from($$result.css).reduce((p,v:any)=>{
        if (!before.has(v) && !hydratedStyles.has(v)){
            p += v.code
        }
        return p;
    },"") as string;
    if (newClasses===""){
        return txt;
    }
    //const txt2 = `${validate_component(HeadStyle, "HeadStyle").$$render($$result, {x:'<style>'+newClasses+'</style>'}, {}, {})}`
    return '<style>'+newClasses+'</style>\n'+txt;
});

export default CssCollect;