/* cssCollect.svelte generated by Svelte v3.52.0 */
import { create_ssr_component, validate_component } from "svelte/internal";
import {getContext} from 'svelte';
import {cssContext} from './context';

const CssCollect = create_ssr_component(($$result :any, $$props:any, $$bindings:any, slots:any) => {
	let { props = {},component} = $$props;
    const hydratedStyles = getContext(cssContext) as Set<any>;
    const before = new Set(Array.from($$result.css))

	let txt = `${component.$$render($$result, Object.assign(props), {}, {
        default:()=>"DeFaUlTSlOtC0NteNt_HeRe"
    })}`;
    // check if hydration added new styles. Send them back into context,
    // so that they are excluded, since hydrated styles load normally
    Array.from($$result.css).forEach((v)=>{
        if (!before.has(v)){
            hydratedStyles.add(v)
        }});

    while (txt.includes("DeFaUlTSlOtC0NteNt_HeRe")){
        txt = txt.replace("DeFaUlTSlOtC0NteNt_HeRe",slots.default ? slots.default({}) : ``)
    }
    return txt;
});

export default CssCollect;