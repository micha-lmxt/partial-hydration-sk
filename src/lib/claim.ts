/* Claim.svelte generated by Svelte v3.50.1 */
import {
	SvelteComponent,
	create_slot,
	get_all_dirty_from_scope,
	get_slot_changes,
	init,
	safe_not_equal,
	transition_in,
	transition_out,
	update_slot_base,
    children
} from "svelte/internal";

function create_fragment(ctx:any[]) {
	let current:boolean;
    let el = ctx[0]
	const default_slot_template = /*#slots*/ ctx[2].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);

	return {
		c() {
            let nodes = children(el);
			if (default_slot) default_slot.l(nodes);
		},
		l() {
            let nodes = children(el);
			if (default_slot) default_slot.l(nodes);
		},
		m() {
			if (default_slot) {
				default_slot.m(el);
			}

			current = true;
		},
		p(ctx:any[], [dirty]:[number]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 2)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[1],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[1])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[1], dirty, null),
						null
					);
				}
			}
		},
		i(local:any) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local:any) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching:boolean) {
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self:any, $$props:any, $$invalidate:any) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { element } = $$props;

	$$self.$$set = ($$props:any) => {
		if ('element' in $$props) $$invalidate(0, element = $$props.element);
		if ('$$scope' in $$props) $$invalidate(1, $$scope = $$props.$$scope);
	};

	return [element, $$scope, slots];
}

class Claim extends SvelteComponent {
	constructor(options:any) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { element: 0 },undefined);
	}
}
/**
 * Claim
 * 
 * Client-side-only component which hydrates the slot into the props-provided element. 
 */
export default Claim;